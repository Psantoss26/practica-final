@TOKEN = tu_token_jwt_aqu√≠

### ‚úÖ 1. Registro de usuario
POST http://localhost:3000/api/user/register
Content-Type: application/json

{
  "email": "santoshernandezpablo@gmail.com",
  "password": "1234"
}

### ‚úÖ 2. Validaci√≥n de email
PUT http://localhost:3000/api/user/validate
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "code": "C√ìDIGO_RECIBIDO_POR_CORREO"
}

### üîê 3. Login
POST http://localhost:3000/api/user/login
Content-Type: application/json

{
  "email": "santoshernandezpablo@gmail.com",
  "password": "1234"
}

### üßç 4. Completar datos personales
PUT http://localhost:3000/api/user/register
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "nombre": "Nicol√°s",
  "apellidos": "Padre del Cabez√≥n",
  "nif": "12345678A"
}

### üè¢ 5. Completar datos de compa√±√≠a
PATCH http://localhost:3000/api/user/company
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "nombre": "PW2S Corp",
  "cif": "B12345678",
  "direccion": "Calle Backend 42"
}

### üè¢ 5b. Completar datos si es aut√≥nomo
PATCH http://localhost:3000/api/user/company
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "direccion": "Calle Backend 42",
  "autonomo": true
}

### üì∏ 6. Subir logo (form-data)
PATCH http://localhost:3000/api/user/logo
Authorization: Bearer {{TOKEN}}
Content-Type: multipart/form-data

--boundary
Content-Disposition: form-data; name="logo"; filename="logo.png"
Content-Type: image/png

< ./ruta/a/logo.png
--boundary--

### üì© 7. Solicitar c√≥digo para recuperaci√≥n de contrase√±a
POST http://localhost:3000/api/user/forgot-password
Content-Type: application/json

{
  "email": "santoshernandezpablo@gmail.com"
}

### üîÅ 8. Recuperar contrase√±a con el c√≥digo
PATCH http://localhost:3000/api/user/reset-password
Content-Type: application/json

{
  "email": "santoshernandezpablo@gmail.com",
  "code": "C√ìDIGO_CORREO",
  "newPassword": "nuevaClave123"
}

### üîê 9. Cambiar contrase√±a con sesi√≥n activa
PATCH http://localhost:3000/api/user/change-password
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "oldPassword": "1234",
  "newPassword": "9876"
}

### üë§ 10. Obtener informaci√≥n del usuario
GET http://localhost:3000/api/user
Authorization: Bearer {{TOKEN}}

### üóëÔ∏è 11. Eliminar usuario (soft delete)
DELETE http://localhost:3000/api/user
Authorization: Bearer {{TOKEN}}

### üóëÔ∏è 11b. Eliminar usuario (hard delete)
DELETE http://localhost:3000/api/user?soft=false
Authorization: Bearer {{TOKEN}}

### üë• 12. Invitar guest a la empresa
POST http://localhost:3000/api/user/invite
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "email": "guest@demo.com"
}
